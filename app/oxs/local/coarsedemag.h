/* FILE: coarsedemag.h            -*-Mode: c++-*-
 *
 * Average H demag field across rectangular cells.  imple
 * implementation that does not take advantage of any memory
 * saving or calculation speed improvements possible using
 * symmetries in interaction tensor or realness of data in
 * spatial domain.
 *
 * Calculation is actually done on a coarser grid than that
 * defined by the mesh.
 *
 */

#ifndef _OXS_COARSEDEMAG
#define _OXS_COARSEDEMAG

#include "key.h"
#include "energy.h"
#include "fft.h"
#include "mesh.h"
#include "meshvalue.h"
#include "simstate.h"
#include "threevector.h"
#include "rectangularmesh.h"

/* End includes */

class Oxs_CoarseDemag:public Oxs_Energy {
private:
  OC_UINT4m local_correction_neighborhood; // Currently 0 or 1 supported
  mutable OC_REAL8m halfNx; // Self demag coefficients x 1/2.;
  mutable OC_REAL8m halfNy; // used for local correction.
  mutable OC_REAL8m halfNz;
  mutable OC_INDEX xdim;   mutable OC_INDEX ydim;   mutable OC_INDEX zdim;
  mutable OC_INDEX totalsize;    // Natural size
  mutable OC_INDEX pxdim;  mutable OC_INDEX pydim;  mutable OC_INDEX pzdim;
  mutable OC_INDEX ptotalsize;  // Padded coarse size
  mutable OC_INDEX subx;   mutable OC_INDEX suby;   mutable OC_INDEX subz;
  /// sub? --- Subsampling to make coarse mesh
  mutable OC_UINT4m mesh_id;
  // The A## arrays hold demag coefficients, transformed into
  // frequency domain.  These are held long term.  Mx, My, Mz
  // and Hcomp are used as temporary space to convert M into
  // H.
  mutable Oxs_Complex *A00; mutable Oxs_Complex *A01;
  mutable Oxs_Complex *A02; mutable Oxs_Complex *A11;
  mutable Oxs_Complex *A12; mutable Oxs_Complex *A22;
  mutable Oxs_Complex *Mx;  mutable Oxs_Complex *My;
  mutable Oxs_Complex *Mz;  mutable Oxs_Complex *Hcomp;
  mutable Oxs_FFT3D fft; // All transforms are same size, so we need
  /// only one Oxs_FFT3D object.

  void FillCoefficientArrays(const Oxs_Mesh* mesh) const;

  OC_INDEX NextPowerOfTwo(OC_INDEX n) const;  // Helper function
  void ReleaseMemory();

protected:
  virtual void GetEnergy(const Oxs_SimState& state,
			 Oxs_EnergyData& oed) const;

public:
  virtual const char* ClassName() const; // ClassName() is
  /// automatically generated by the OXS_EXT_REGISTER macro.
  Oxs_CoarseDemag(const char* name,     // Child instance id
		  Oxs_Director* newdtr, // App director
		  const char* argstr);  // MIF input block parameters
  virtual ~Oxs_CoarseDemag() { ReleaseMemory(); }
  virtual OC_BOOL Init();
};


#endif // _OXS_COARSEDEMAG

