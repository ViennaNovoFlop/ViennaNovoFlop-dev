# MIF 2.1

set pi [expr 4*atan(1.0)]
set mu0 [expr 4*$pi*1e-7]

Parameter code  ;# Should be either "new" or "old"

Parameter size large  ;# large, thick, or normal

Parameter itlimit 10

Parameter cellsize 5 ;# Cell size in nm
set cellsize [expr {$cellsize*1e-9}] ;# Convert to meters

Parameter RandomAnisotropy 0.0 ;# Scaling for random anisotropy
## term.  If set to 0, then uniform 0.5 kJ/m anisotropy as
## specified in muMAG Standard Problem #1 is applied.

if {[string match "large" $size]} {
   Specify Oxs_BoxAtlas:atlas {
     xrange {0 1000e-9}
     yrange {0  500e-9}
     zrange {0   20e-9}
   }
} elseif {[string match "thick" $size]} {
   Specify Oxs_BoxAtlas:atlas {
     xrange {0 500e-9}
     yrange {0 200e-9}
     zrange {0 100e-9}
   }
} else {
   Specify Oxs_BoxAtlas:atlas {
     xrange {0  500e-9}
     yrange {0  250e-9}
     zrange {0   20e-9}
   }
}

Specify Oxs_RectangularMesh:mesh [subst {
  cellsize {$cellsize $cellsize $cellsize}
  atlas :atlas
}]

Specify Oxs_UniformExchange {
  A  13e-12
}

if {$RandomAnisotropy>0.0} {
  Specify Oxs_UniaxialAnisotropy [subst {
    K1 { Oxs_RandomScalarField {
        range_min [expr {$RandomAnistropy*0.5e3}]
        range_max [expr {$RandomAnistropy*5.0e3}]
    }}
    axis { Oxs_RandomVectorField {
        min_norm 1.0
        max_norm 1.0
    }}
  }]
} else {
  Specify Oxs_UniaxialAnisotropy {
    K1 0.5e3
    axis {1 0 0}
  }
}

if {[string match "new" $code]} {
    Specify Oxs_Demag {}
} else {
    Specify Oxs_DemagOld {}
}

Specify Oxs_UZeeman [subst {
  multiplier [expr 0.001/$mu0]
  Hrange {
     { 50  0.87275325  0  -50 -0.87275325 0   100 }
  }
}]

Specify Oxs_CGEvolve:evolve {}

Specify Oxs_MinDriver [subst {
 basename stdprob1
 evolver :evolve
 stopping_mxHxm 0.01
 mesh :mesh
 Ms 8.6e5
 m0 {10 1 0}
 total_iteration_limit $itlimit
}]

Destination archive mmArchive
Schedule DataTable archive Step 1
